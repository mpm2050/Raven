// This file implements the ICustomDoc Interface and Gateway for Python.
// Generated by makegw.py

#include "shell_pch.h"
#include "PyICustomDoc.h"

// @doc - This file contains autoduck documentation
// ---------------------------------------------------
//
// Interface Implementation

PyICustomDoc::PyICustomDoc(IUnknown *pdisp):
	PyIUnknown(pdisp)
{
	ob_type = &type;
}

PyICustomDoc::~PyICustomDoc()
{
}

/* static */ ICustomDoc *PyICustomDoc::GetI(PyObject *self)
{
	return (ICustomDoc *)PyIUnknown::GetI(self);
}

// @pymethod |PyICustomDoc|SetUIHandler|Description of SetUIHandler.
PyObject *PyICustomDoc::SetUIHandler(PyObject *self, PyObject *args)
{
	ICustomDoc *pICD = GetI(self);
	if ( pICD == NULL )
		return NULL;
	// @pyparm <o PyIDocHostUIHandler *>|pUIHandler||Description for pUIHandler
	PyObject *obpUIHandler;
	IDocHostUIHandler * pUIHandler;
	if ( !PyArg_ParseTuple(args, "O:SetUIHandler", &obpUIHandler) )
		return NULL;
	BOOL bPythonIsHappy = TRUE;
	if (bPythonIsHappy && !PyCom_InterfaceFromPyInstanceOrObject(obpUIHandler, IID_IDocHostUIHandler, (void **)&pUIHandler, TRUE /* bNoneOK */))
		 bPythonIsHappy = FALSE;
	if (!bPythonIsHappy) return NULL;
	HRESULT hr;
	PY_INTERFACE_PRECALL;
	hr = pICD->SetUIHandler( pUIHandler );
	if (pUIHandler) pUIHandler->Release();

	PY_INTERFACE_POSTCALL;

	if ( FAILED(hr) )
		return PyCom_BuildPyException(hr, pICD, IID_ICustomDoc );
	Py_INCREF(Py_None);
	return Py_None;

}

// @object PyICustomDoc|Description of the interface
static struct PyMethodDef PyICustomDoc_methods[] =
{
	{ "SetUIHandler", PyICustomDoc::SetUIHandler, 1 }, // @pymeth SetUIHandler|Description of SetUIHandler
	{ NULL }
};

PyComTypeObject PyICustomDoc::type("PyICustomDoc",
		&PyIUnknown::type,
		sizeof(PyICustomDoc),
		PyICustomDoc_methods,
		GET_PYCOM_CTOR(PyICustomDoc));
// ---------------------------------------------------
//
// Gateway Implementation
STDMETHODIMP PyGCustomDoc::SetUIHandler(
		/* [in] */ IDocHostUIHandler * pUIHandler)
{
	PY_GATEWAY_METHOD;
	PyObject *obpUIHandler;
	obpUIHandler = PyCom_PyObjectFromIUnknown(pUIHandler, IID_IDocHostUIHandler, TRUE);
	HRESULT hr=InvokeViaPolicy("SetUIHandler", NULL, "O", obpUIHandler);
	Py_XDECREF(obpUIHandler);
	return hr;
}

